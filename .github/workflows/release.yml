jobs:
  release:
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
    - continue-on-error: true
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true
      name: Set Enviroment
      run: 'echo ::set-env name=RELEASE_VERSION::$(echo $(python .github/assets/versionUp.py))

        echo ::set-env name=MINECRAFT_VERSION::$(echo $(cat .github/assets/supportedVersion))

        echo ::set-env name=NEW_RELEASE::$(echo $(python .github/assets/pattern_check.py
        "${{ github.event.head_commit.message }}"))

        '
    - continue-on-error: true
      if: env.NEW_RELEASE == 'True'
      name: Set up OpenJDK
      uses: actions/setup-java@v2
      with:
        cache: maven
        distribution: adopt
        java-version: '11'
    - continue-on-error: true
      if: env.NEW_RELEASE == 'True'
      name: Set up Python3
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - continue-on-error: true
      if: env.NEW_RELEASE == 'True'
      name: Build with maven & make release artifacts
      run: 'cd serverlist-server

        mvn -B package --file pom.xml

        cd ..

        mkdir setup-zip

        cp .github/assets/run.bat setup-zip/run.bat && cp .github/assets/README.txt
        setup-zip/README.txt && cp serverlist-server/target/BedrockConnect-1.0-SNAPSHOT.jar
        setup-zip/BedrockConnect-1.0-SNAPSHOT.jar

        cd setup-zip

        zip -r ../BedrockConnect-setup.zip .

        cd ..

        rm -rf setup-zip

        '
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: create_release
      if: env.NEW_RELEASE == 'True'
      name: create release
      uses: actions/create-release@v1
      with:
        draft: false
        prerelease: false
        release_name: ${{ github.event.head_commit.message }}
        tag_name: ${{ env.RELEASE_VERSION }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset1
      if: env.NEW_RELEASE == 'True'
      name: Upload Release Asset 1
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_content_type: application/zip
        asset_name: BedrockConnect-setup.zip
        asset_path: ./BedrockConnect-setup.zip
        upload_url: ${{ steps.create_release.outputs.upload_url }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      id: upload-release-asset2
      if: env.NEW_RELEASE == 'True'
      name: Upload Release Asset 2
      uses: actions/upload-release-asset@v1.0.1
      with:
        asset_content_type: application/java-archive
        asset_name: BedrockConnect-1.0-SNAPSHOT.jar
        asset_path: ./serverlist-server/target/BedrockConnect-1.0-SNAPSHOT.jar
        upload_url: ${{ steps.create_release.outputs.upload_url }}
name: Release
on:
  repository_dispatch:
    types: trigger-ga___release.yml
